#include "../inc.h"


class Solution {
   public:
    vector<vector<int>> BSTSequences(TreeNode* root) {}
};

void test(const vector<ComplexVal>& vals, vector<vector<int>>&& expect) {
    save4print(vals);
    auto root = constructIntTree(vals);
    TreeAutoReleaser _(root);
    auto ret = Solution().BSTSequences(root);
    std::sort(ret.begin(), ret.end());
    std::sort(expect.begin(), expect.end());
    assert_eq_ret(expect, ret);
}

int main() {
    test({}, {{}});
    test({2, 1, 3}, {{2, 1, 3}, {2, 3, 1}});
    test({4, 2, 6, 1, 3, 5, 7},
         {{4, 2, 6, 1, 3, 5, 7}, {4, 2, 6, 1, 3, 7, 5}, {4, 2, 6, 1, 5, 7, 3},
          {4, 2, 6, 1, 5, 3, 7}, {4, 2, 6, 1, 7, 3, 5}, {4, 2, 6, 1, 7, 5, 3},
          {4, 2, 6, 3, 5, 7, 1}, {4, 2, 6, 3, 5, 1, 7}, {4, 2, 6, 3, 7, 1, 5},
          {4, 2, 6, 3, 7, 5, 1}, {4, 2, 6, 3, 1, 5, 7}, {4, 2, 6, 3, 1, 7, 5},
          {4, 2, 6, 5, 7, 1, 3}, {4, 2, 6, 5, 7, 3, 1}, {4, 2, 6, 5, 1, 3, 7},
          {4, 2, 6, 5, 1, 7, 3}, {4, 2, 6, 5, 3, 7, 1}, {4, 2, 6, 5, 3, 1, 7},
          {4, 2, 6, 7, 1, 3, 5}, {4, 2, 6, 7, 1, 5, 3}, {4, 2, 6, 7, 3, 5, 1},
          {4, 2, 6, 7, 3, 1, 5}, {4, 2, 6, 7, 5, 1, 3}, {4, 2, 6, 7, 5, 3, 1},
          {4, 2, 1, 3, 6, 5, 7}, {4, 2, 1, 3, 6, 7, 5}, {4, 2, 1, 6, 3, 5, 7},
          {4, 2, 1, 6, 3, 7, 5}, {4, 2, 1, 6, 5, 7, 3}, {4, 2, 1, 6, 5, 3, 7},
          {4, 2, 1, 6, 7, 3, 5}, {4, 2, 1, 6, 7, 5, 3}, {4, 2, 3, 6, 1, 5, 7},
          {4, 2, 3, 6, 1, 7, 5}, {4, 2, 3, 6, 5, 7, 1}, {4, 2, 3, 6, 5, 1, 7},
          {4, 2, 3, 6, 7, 1, 5}, {4, 2, 3, 6, 7, 5, 1}, {4, 2, 3, 1, 6, 5, 7},
          {4, 2, 3, 1, 6, 7, 5}, {4, 6, 2, 5, 7, 1, 3}, {4, 6, 2, 5, 7, 3, 1},
          {4, 6, 2, 5, 1, 3, 7}, {4, 6, 2, 5, 1, 7, 3}, {4, 6, 2, 5, 3, 7, 1},
          {4, 6, 2, 5, 3, 1, 7}, {4, 6, 2, 7, 1, 3, 5}, {4, 6, 2, 7, 1, 5, 3},
          {4, 6, 2, 7, 3, 5, 1}, {4, 6, 2, 7, 3, 1, 5}, {4, 6, 2, 7, 5, 1, 3},
          {4, 6, 2, 7, 5, 3, 1}, {4, 6, 2, 1, 3, 5, 7}, {4, 6, 2, 1, 3, 7, 5},
          {4, 6, 2, 1, 5, 7, 3}, {4, 6, 2, 1, 5, 3, 7}, {4, 6, 2, 1, 7, 3, 5},
          {4, 6, 2, 1, 7, 5, 3}, {4, 6, 2, 3, 5, 7, 1}, {4, 6, 2, 3, 5, 1, 7},
          {4, 6, 2, 3, 7, 1, 5}, {4, 6, 2, 3, 7, 5, 1}, {4, 6, 2, 3, 1, 5, 7},
          {4, 6, 2, 3, 1, 7, 5}, {4, 6, 5, 7, 2, 1, 3}, {4, 6, 5, 7, 2, 3, 1},
          {4, 6, 5, 2, 7, 1, 3}, {4, 6, 5, 2, 7, 3, 1}, {4, 6, 5, 2, 1, 3, 7},
          {4, 6, 5, 2, 1, 7, 3}, {4, 6, 5, 2, 3, 7, 1}, {4, 6, 5, 2, 3, 1, 7},
          {4, 6, 7, 2, 5, 1, 3}, {4, 6, 7, 2, 5, 3, 1}, {4, 6, 7, 2, 1, 3, 5},
          {4, 6, 7, 2, 1, 5, 3}, {4, 6, 7, 2, 3, 5, 1}, {4, 6, 7, 2, 3, 1, 5},
          {4, 6, 7, 5, 2, 1, 3}, {4, 6, 7, 5, 2, 3, 1}});
    return 0;
}
